{"ast":null,"code":"import{useState}from\"react\";const wait=ms=>new Promise(resolve=>setTimeout(resolve,ms));/**\r\n * This is a custom hook that can be used to submit a form and simulate an API call\r\n * It uses Math.random() to simulate a random success or failure, with 50% chance of each\r\n */const useSubmit=()=>{const[isLoading,setLoading]=useState(false);const[response,setResponse]=useState(null);const submit=async(url,data)=>{const random=Math.random();setLoading(true);try{await wait(2000);if(random<0.5){throw new Error(\"Something went wrong\");}setResponse({type:'success',message:\"Thanks for your submission \".concat(data.firstName,\", we will get back to you shortly!\")});}catch(error){setResponse({type:'error',message:'Something went wrong, please try again later!'});}finally{setLoading(false);}};return{isLoading,response,submit};};export default useSubmit;","map":{"version":3,"names":["useState","wait","ms","Promise","resolve","setTimeout","useSubmit","isLoading","setLoading","response","setResponse","submit","url","data","random","Math","Error","type","message","concat","firstName","error"],"sources":["C:/Coding/Meta_Advanced_Basics/src/hooks/useSubmit.js"],"sourcesContent":["import {useState} from \"react\";\r\n\r\nconst wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n/**\r\n * This is a custom hook that can be used to submit a form and simulate an API call\r\n * It uses Math.random() to simulate a random success or failure, with 50% chance of each\r\n */\r\nconst useSubmit = () => {\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n\r\n  const submit = async (url, data) => {\r\n    const random = Math.random();\r\n    setLoading(true);\r\n    try {\r\n      await wait(2000);\r\n      if (random < 0.5) {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n      setResponse({\r\n        type: 'success',\r\n        message: `Thanks for your submission ${data.firstName}, we will get back to you shortly!`,\r\n      })\r\n    } catch (error) {\r\n      setResponse({\r\n        type: 'error',\r\n        message: 'Something went wrong, please try again later!',\r\n      })\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { isLoading, response, submit };\r\n}\r\n\r\nexport default useSubmit;\r\n"],"mappings":"AAAA,OAAQA,QAAQ,KAAO,OAAO,CAE9B,KAAM,CAAAC,IAAI,CAAIC,EAAE,EAAK,GAAI,CAAAC,OAAO,CAAEC,OAAO,EAAKC,UAAU,CAACD,OAAO,CAAEF,EAAE,CAAC,CAAC,CAEtE;AACA;AACA;AACA,GACA,KAAM,CAAAI,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,SAAS,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAE9C,KAAM,CAAAW,MAAM,CAAG,KAAAA,CAAOC,GAAG,CAAEC,IAAI,GAAK,CAClC,KAAM,CAAAC,MAAM,CAAGC,IAAI,CAACD,MAAM,CAAC,CAAC,CAC5BN,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAP,IAAI,CAAC,IAAI,CAAC,CAChB,GAAIa,MAAM,CAAG,GAAG,CAAE,CAChB,KAAM,IAAI,CAAAE,KAAK,CAAC,sBAAsB,CAAC,CACzC,CACAN,WAAW,CAAC,CACVO,IAAI,CAAE,SAAS,CACfC,OAAO,+BAAAC,MAAA,CAAgCN,IAAI,CAACO,SAAS,sCACvD,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdX,WAAW,CAAC,CACVO,IAAI,CAAE,OAAO,CACbC,OAAO,CAAE,+CACX,CAAC,CAAC,CACJ,CAAC,OAAS,CACRV,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,MAAO,CAAED,SAAS,CAAEE,QAAQ,CAAEE,MAAO,CAAC,CACxC,CAAC,CAED,cAAe,CAAAL,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}