{"ast":null,"code":"import _objectSpread from \"C:/Coding/Meta_Advanced_Basics/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// src/index.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useCallback, useState, useId } from \"react\";\nfunction useDisclosure() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  const handleOpen = useCallbackRef(onOpenProp);\n  const handleClose = useCallbackRef(onCloseProp);\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false);\n  const isOpen = isOpenProp !== void 0 ? isOpenProp : isOpenState;\n  const isControlled = isOpenProp !== void 0;\n  const uid = useId();\n  const id = idProp !== null && idProp !== void 0 ? idProp : \"disclosure-\".concat(uid);\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    handleClose == null ? void 0 : handleClose();\n  }, [isControlled, handleClose]);\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    handleOpen == null ? void 0 : handleOpen();\n  }, [isControlled, handleOpen]);\n  const onToggle = useCallback(() => {\n    if (isOpen) {\n      onClose();\n    } else {\n      onOpen();\n    }\n  }, [isOpen, onOpen, onClose]);\n  function getButtonProps() {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick(event) {\n        var _a;\n        (_a = props2.onClick) == null ? void 0 : _a.call(props2, event);\n        onToggle();\n      }\n    });\n  }\n  function getDisclosureProps() {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      hidden: !isOpen,\n      id\n    });\n  }\n  return {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps,\n    getDisclosureProps\n  };\n}\nexport { useDisclosure };","map":{"version":3,"names":["useCallbackRef","useCallback","useState","useId","useDisclosure","props","arguments","length","undefined","onClose","onCloseProp","onOpen","onOpenProp","isOpen","isOpenProp","id","idProp","handleOpen","handleClose","isOpenState","setIsOpen","defaultIsOpen","isControlled","uid","concat","onToggle","getButtonProps","props2","_objectSpread","onClick","event","_a","call","getDisclosureProps","hidden"],"sources":["C:/Coding/Meta_Advanced_Basics/node_modules/@chakra-ui/react-use-disclosure/dist/index.esm.js"],"sourcesContent":["// src/index.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useCallback, useState, useId } from \"react\";\nfunction useDisclosure(props = {}) {\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  const handleOpen = useCallbackRef(onOpenProp);\n  const handleClose = useCallbackRef(onCloseProp);\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false);\n  const isOpen = isOpenProp !== void 0 ? isOpenProp : isOpenState;\n  const isControlled = isOpenProp !== void 0;\n  const uid = useId();\n  const id = idProp ?? `disclosure-${uid}`;\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    handleClose == null ? void 0 : handleClose();\n  }, [isControlled, handleClose]);\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    handleOpen == null ? void 0 : handleOpen();\n  }, [isControlled, handleOpen]);\n  const onToggle = useCallback(() => {\n    if (isOpen) {\n      onClose();\n    } else {\n      onOpen();\n    }\n  }, [isOpen, onOpen, onClose]);\n  function getButtonProps(props2 = {}) {\n    return {\n      ...props2,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick(event) {\n        var _a;\n        (_a = props2.onClick) == null ? void 0 : _a.call(props2, event);\n        onToggle();\n      }\n    };\n  }\n  function getDisclosureProps(props2 = {}) {\n    return {\n      ...props2,\n      hidden: !isOpen,\n      id\n    };\n  }\n  return {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps,\n    getDisclosureProps\n  };\n}\nexport {\n  useDisclosure\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}